import HM
import XCTest

final class KeyedDecodingContainerProtocolTestCase: XCTestCase {
  func test_decode() throws {
    let coatable = Coatable(ğŸ¥¼: 0, ğŸ§¥: "ğŸ§¥")
    XCTAssertEqual(
      coatable,
      try JSONDecoder().decode(
        Coatable.self,
        from: try JSONEncoder().encode(coatable)
      )
    )
  }
}

private struct Coatable: Codable, Equatable {
  let ğŸ¥¼: Int
  let ğŸ§¥: String
}

extension Coatable {
  init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)

    ğŸ¥¼ = try container.decode(forKey: .ğŸ¥¼)

    let ğŸ§¥: String = try container.decode(forKey: .ğŸ§¥)
    self.ğŸ§¥ = ğŸ§¥
  }
}
