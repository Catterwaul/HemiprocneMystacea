public extension UITextField {
   final var editingChanged游니: MultiClosure<()> {
      return HemiprocneMystacea.editingChanged游니[self]
   }
   
   final var editingDidEndOnExit游니: MultiClosure<()> {
      return HemiprocneMystacea.editingDidEndOnExit游니[self]
   }
}

private var
   editingChanged游니 = UIControl.Event游닍(
      controlEvent: .EditingChanged,
      selector: #selector(UITextFieldSelectors.onEditingChanged)
   ),
   editingDidEndOnExit游니 = UIControl.Event游닍(
      controlEvent: .EditingDidEndOnExit,
      selector: #selector(UITextFieldSelectors.onEditingDidEndOnExit)
   )

// Won't work if private.
extension UITextField {
   func onEditingChanged() {editingChanged游니[]}
   func onEditingDidEndOnExit() {editingDidEndOnExit游니[]}
}
@objc private protocol UITextFieldSelectors {
	func onEditingChanged()
	func onEditingDidEndOnExit()
}